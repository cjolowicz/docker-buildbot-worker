PLATFORM = $(notdir $(abspath $(CURDIR)/../..))
RELEASE = $(notdir $(abspath $(CURDIR)/..))
ARCH = $(notdir $(CURDIR))

M4_CURDIR = $(TOPDIR)/m4/$(PLATFORM)/$(RELEASE)/$(ARCH)

ifeq ($(strip $(REPO)),)
    IMAGE = buildbot-worker:1.8.0-$(PLATFORM)-$(RELEASE)-$(ARCH)
else
    IMAGE = $(REPO)/buildbot-worker:1.8.0-$(PLATFORM)-$(RELEASE)-$(ARCH)
endif

all: build

Dockerfile:
	m4 -I $(TOPDIR)/m4 --prefix-builtins \
	    -D REPO=$(REPO) \
	    -D PLATFORM=$(PLATFORM) \
	    -D RELEASE=$(RELEASE) \
	    -D ARCH=$(ARCH) \
	    $(M4_CURDIR)/Dockerfile.m4 \
	    > Dockerfile

build: Dockerfile
	if docker image ls --format='{{.Repository}}:{{.Tag}}' | \
	        grep -q '^$(IMAGE)$$' ; then \
	    docker build \
	        --file=$(CURDIR)/Dockerfile \
	        --tag=$(IMAGE) \
	        --cache-from=$(IMAGE) \
	        $(TOPDIR) ; \
	else \
	    docker build \
	        --file=$(CURDIR)/Dockerfile \
	        --tag=$(IMAGE) \
	        $(TOPDIR) ; \
	fi

push: build
	docker push $(IMAGE)

pull:
	docker pull $(IMAGE)

dep: Makefile.dep

Makefile.dep: $(TOPDIR)/makedep.sh $(M4_CURDIR)/Dockerfile.m4
	cd $(TOPDIR)/m4 && ../makedep.sh \
	    $(CURDIR)/Dockerfile \
	    $(M4_CURDIR)/Dockerfile.m4 \
	    > $(CURDIR)/Makefile.dep

.PHONY: all build push pull dep

include Makefile.dep
